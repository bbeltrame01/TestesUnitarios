unit TestufrTestesUnitarios;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Vcl.Dialogs, Winapi.Windows, System.SysUtils, Vcl.ExtCtrls,
  Vcl.Graphics, System.Variants, Winapi.Messages, Vcl.StdCtrls, Vcl.Controls, Vcl.Forms,
  ufrTestesUnitarios, System.Classes;

type
  // Test methods for class TfrTestesUnitarios
  TestTfrTestesUnitarios = class(TTestCase)
  strict private
    FfrTestesUnitarios: TfrTestesUnitarios;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestRealizarOperacao;
  end;

implementation

procedure TestTfrTestesUnitarios.SetUp;
begin
  FfrTestesUnitarios := TfrTestesUnitarios.Create(nil);
end;

procedure TestTfrTestesUnitarios.TearDown;
begin
  FfrTestesUnitarios.Free;
  FfrTestesUnitarios := nil;
end;

procedure TestTfrTestesUnitarios.TestRealizarOperacao;
const
  FMensagemErro = 'Erro de operação. Favor validar função "%0:s" >> Operacação "%1:s".';
var
  ReturnValue: Integer;
  AOperacao: TOperacao;
  AValorB: Integer;
  AValorA: Integer;
begin
  // TODO: Setup method call parameters
  AValorA := 1;
  AValorB := 2;

  //Somar
  AOperacao := toSomar;
  ReturnValue := FfrTestesUnitarios.RealizarOperacao(AValorA, AValorB, AOperacao);
  CheckEquals(3, ReturnValue, Format(FMensagemErro, ['RealizarOperacao', 'Somar']));

  //Subtrair
  AOperacao := toSubtrair;
  ReturnValue := FfrTestesUnitarios.RealizarOperacao(AValorA, AValorB, AOperacao);
  CheckEquals(-1, ReturnValue, Format(FMensagemErro, ['RealizarOperacao', 'Subtrair']));

  //Multiplicar
  AOperacao := toMultiplicar;
  ReturnValue := FfrTestesUnitarios.RealizarOperacao(AValorA, AValorB, AOperacao);
  CheckEquals(2, ReturnValue, Format(FMensagemErro, ['RealizarOperacao', 'Multiplicar']));

  //Dividir
  AOperacao := toDividir;
  ReturnValue := FfrTestesUnitarios.RealizarOperacao(AValorA, AValorB, AOperacao);
  CheckEquals(0, ReturnValue, Format(FMensagemErro, ['RealizarOperacao', 'Dividir']));
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTfrTestesUnitarios.Suite);
end.

